// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskNinja.Services;

#nullable disable

namespace TaskNinja.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231227191916_AddComment")]
    partial class AddComment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("TaskNinja.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TodoTaskID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TodoTaskID");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Content = "First comment on Task 1",
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5872),
                            TodoTaskID = 24
                        },
                        new
                        {
                            ID = 2,
                            Content = "Another comment on Task 1",
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5880),
                            TodoTaskID = 24
                        },
                        new
                        {
                            ID = 3,
                            Content = "Comment on Task 2",
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5882),
                            TodoTaskID = 25
                        });
                });

            modelBuilder.Entity("TaskNinja.Models.TodoTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5644),
                            Description = "Description for Task 1",
                            DueDate = new DateTime(2023, 12, 20, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5688),
                            Name = "Task 1",
                            Priority = "High",
                            Status = "InProgress"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5697),
                            Description = "Description for Task 2",
                            DueDate = new DateTime(2024, 1, 10, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5700),
                            Name = "Task 2",
                            Priority = "Medium",
                            Status = "NotStarted"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5703),
                            Description = "Description for Task 3",
                            DueDate = new DateTime(2024, 1, 17, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5705),
                            Name = "Task 3",
                            Priority = "Low",
                            Status = "Completed"
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5708),
                            Description = "Description for Task 4",
                            DueDate = new DateTime(2023, 11, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5709),
                            Name = "Task 4",
                            Priority = "High",
                            Status = "InProgress"
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5712),
                            Description = "Description for Task 5",
                            DueDate = new DateTime(2024, 1, 6, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5713),
                            Name = "Task 5",
                            Priority = "Medium",
                            Status = "Completed"
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5719),
                            Description = "Description for Task 6",
                            DueDate = new DateTime(2023, 12, 25, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5720),
                            Name = "Task 6",
                            Priority = "Low",
                            Status = "NotStarted"
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5723),
                            Description = "Description for Task 7",
                            DueDate = new DateTime(2024, 1, 17, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5724),
                            Name = "Task 7",
                            Priority = "Medium",
                            Status = "InProgress"
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5727),
                            Description = "Description for Task 8",
                            DueDate = new DateTime(2024, 1, 26, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5729),
                            Name = "Task 8",
                            Priority = "Low",
                            Status = "NotStarted"
                        },
                        new
                        {
                            ID = 9,
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5731),
                            Description = "Description for Task 9",
                            DueDate = new DateTime(2024, 1, 3, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5733),
                            Name = "Task 9",
                            Priority = "High",
                            Status = "Completed"
                        },
                        new
                        {
                            ID = 10,
                            CreatedDate = new DateTime(2023, 12, 27, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5738),
                            Description = "Description for Task 10",
                            DueDate = new DateTime(2024, 1, 10, 20, 19, 16, 156, DateTimeKind.Local).AddTicks(5739),
                            Name = "Task 10",
                            Priority = "Medium",
                            Status = "InProgress"
                        });
                });

            modelBuilder.Entity("TaskNinja.Models.Comment", b =>
                {
                    b.HasOne("TaskNinja.Models.TodoTask", "TodoTask")
                        .WithMany("Comments")
                        .HasForeignKey("TodoTaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoTask");
                });

            modelBuilder.Entity("TaskNinja.Models.TodoTask", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
